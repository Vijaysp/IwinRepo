<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE struts-config PUBLIC
          "-//Apache Software Foundation//DTD Struts Configuration 1.2//EN"
          "http://jakarta.apache.org/struts/dtds/struts-config_1_2.dtd">

<!-- This is a blank Struts configuration file with an example welcome action/page 
	and other commented sample elements. Tiles and the Struts Validator are configured 
	using the factory defaults and are ready-to-use. NOTE: If you have a generator 
	tool to create the corresponding Java classes for you, you could include 
	the details in the "form-bean" declarations. Otherwise, you would only define 
	the "form-bean" element itself, with the corresponding "name" and "type" 
	attributes, as shown here. -->

<struts-config>
	<!-- ==== Data Source Configuration ==== -->
	<!-- <data-sources> <data-source type="org.apache.commons.dbcp.BasicDataSource"> 
		<set-property property="driverClassName" value="org.postgresql.Driver" /> 
		<set-property property="url" value="jdbc:postgresql://localhost/mydatabase" 
		/> <set-property property="username" value="me" /> <set-property property="password" 
		value="test" /> <set-property property="maxActive" value="10" /> <set-property 
		property="maxWait" value="5000" /> <set-property property="defaultAutoCommit" 
		value="false" /> <set-property property="defaultReadOnly" value="false" /> 
		<set-property property="validationQuery" value="SELECT COUNT(*) FROM market" 
		/> </data-source> </data-sources> -->

	<!-- ==== Form Bean Definitions ==== -->
	<form-beans>
		<!-- sample form bean descriptor for an ActionForm <form-bean name="inputForm" 
			type="app.InputForm"/> end sample -->

		<!-- sample form bean descriptor for a DynaActionForm <form-bean name="logonForm" 
			type="org.apache.struts.action.DynaActionForm"> <form-property name="username" 
			type="java.lang.String"/> <form-property name="password" type="java.lang.String"/> 
			</form-bean> end sample -->
		<form-bean name="UserLoginForm" type="struts.form.UserLoginForm">
		</form-bean>
		<form-bean name="UserLogoutForm" type="struts.form.UserLogoutForm">
		</form-bean>
		<form-bean name="UserRegisterForm" type="struts.form.UserRegisterForm">
		</form-bean>

		<form-bean name="UserPredictionForm" type="struts.form.UserPredictionForm">
		</form-bean>

		<form-bean name="AdminForm" type="struts.form.AdminForm">
		</form-bean>

		<form-bean name="PointsForm" type="struts.form.PointsForm">
		</form-bean>

		<form-bean name="TeamForm" type="struts.form.TeamForm">
		</form-bean>

		<form-bean name="MatchForm" type="struts.form.MatchForm">
		</form-bean>

		<form-bean name="PlayerForm" type="struts.form.PlayerForm">
		</form-bean>

		<form-bean name="MyTeamForm" type="struts.form.MyTeamForm">
		</form-bean>

		<form-bean name="FeedbackForm" type="struts.form.FeedbackForm">
		</form-bean>
	</form-beans>

	<!-- ==== Global Exception Definitions ==== -->
	<global-exceptions>
		<!-- sample exception handler <exception key="expired.password" type="app.ExpiredPasswordException" 
			path="/changePassword.jsp"/> end sample -->
	</global-exceptions>


	<!-- ==== Global Forward Definitions ==== -->
	<global-forwards>
		<!-- Default forward to "Welcome" action -->
		<!-- Demonstrates using index.jsp to forward -->
		<forward name="welcome" path="/Welcome.do" />
	</global-forwards>


	<!-- ==== Action Mapping Definitions ==== -->
	<action-mappings>
		<!-- Default "Welcome" action -->
		<!-- Forwards to Welcome.jsp -->
		<action path="/Welcome" forward="/pages/Welcome.jsp">
		</action>

		<action path="/logout" forward="/pages/logout.jsp">
			<forward name="logout" path="/pages/user/userlogin.jsp" />
		</action>

		<action path="/userlogin" name="UserLoginForm" scope="request"
			validate="true" input="/pages/user/userlogin.jsp" type="struts.action.UserLoginAction">
			<forward name="success" path="/pages/user/MyTeam.jsp" />
			<!-- <forward name="success" path="/pages/user/loginsuccess.jsp"/> -->
			<forward name="failure" path="/pages/user/userlogin.jsp" />
		</action>

		<action path="/userregister" name="UserRegisterForm" scope="request"
			validate="true" input="/pages/user/userRegister.jsp" type="struts.action.UserRegisterAction">
			<forward name="success" path="/pages/user/registersuccess.jsp" />
			<forward name="input" path="/pages/user/userRegister.jsp" />
			<forward name="updated" path="/pages/user/updatesuccess.jsp" />
		</action>
		<action path="/forgotpassword"  name="UserRegisterForm" scope="request"
			validate="true"  type="struts.action.ForgotPasswordAction">
			<forward name="forgotpassword" path="/pages/user/forgotpassword.jsp" />
			<forward name="updated" path="/pages/user/userlogin.jsp" />
			<forward name="invalid" path="/pages/user/forgotpassword.jsp" />
		</action>

		<action path="/userPrediction" name="UserPredictionForm" scope="request"
			validate="true" input="/pages/user/userPrediction.jsp" type="struts.action.UserPredictionAction">
			<forward name="success" path="/pages/Welcome.jsp" />
			<forward name="input" path="/pages/user/loginsuccess.jsp" />
			<forward name="failure" path="/index.jsp" />
		</action>

		<action path="/admin" name="AdminForm" scope="request"
			validate="true" input="/pages/user/admin.jsp" type="struts.action.AdminAction">
			<forward name="success" path="/pages/user/updatepoints.jsp" />
			<forward name="input" path="/pages/user/admin.jsp" />
		</action>

		<action path="/points" name="PointsForm" scope="request"
			validate="true" input="/pages/user/updatepoints.jsp" type="struts.action.PointsAction">
			<forward name="success" path="/pages/user/admin.jsp" />
			<forward name="input" path="/pages/user/updatepoints.jsp" />
		</action>

		<action path="/team" name="TeamForm" scope="request" validate="true"
			input="/pages/user/createteam.jsp" type="struts.action.TeamAction">
			<forward name="success" path="/pages/user/teamsuccess.jsp" />
			<forward name="input" path="/pages/user/createteam.jsp" />
		</action>

		<action path="/match" name="MatchForm" scope="request"
			validate="true" input="/pages/user/creatematch.jsp" type="struts.action.MatchAction">
			<forward name="success" path="/pages/user/matchsuccess.jsp" />
			<forward name="input" path="/pages/user/creatematch.jsp" />
		</action>

		<action path="/player" name="PlayerForm" scope="request"
			validate="true" input="/pages/user/createplayer.jsp" type="struts.action.PlayerAction">
			<forward name="success" path="/pages/user/playersuccess.jsp" />
			<forward name="input" path="/pages/user/createplayer.jsp" />
		</action>

		<action path="/myTeam" name="MyTeamForm" scope="request"
			validate="true" input="/pages/user/MyTeam.jsp" type="struts.action.MyTeamAction">
			<forward name="success" path="/pages/user/MyTeamSuccess.jsp" />
			<forward name="input" path="/pages/user/MyTeam.jsp" />
		</action>

		<action path="/feedback" name="FeedbackForm" scope="request"
			validate="true" input="/pages/user/feedback.jsp" type="struts.action.FeedbackAction">
			<forward name="success" path="/pages/user/feedbackSuccess.jsp" />
		</action>
		
		<!-- Added for Logout - Vijay  -->
		<action path="/logout" forward="/pages/logout.jsp" name="UserLogoutForm" scope="request"
			validate="true"  type="struts.action.UserLogoutAction">
			<forward name="logout" path="/logout.do" />
		</action>

		<action path="/userlogin" name="UserLoginForm" scope="request"
			validate="true" input="/pages/user/userlogin.jsp" type="struts.action.UserLoginAction">
			<forward name="success" path="/pages/user/MyTeam.jsp" />
			<!-- <forward name="success" path="/pages/user/loginsuccess.jsp"/> -->
			<forward name="failure" path="/pages/user/userlogin.jsp" />
		</action>
		
	</action-mappings>


	<!-- ==== Controller Configuration ==== -->
	<controller processorClass="org.apache.struts.tiles.TilesRequestProcessor" />

	<!-- ==== Message Resources Definitions ==== -->
	<message-resources parameter="applicationresource" />

	<!-- ==== Plug Ins Configuration ==== -->
	<!-- ===== Tiles plugin ==== -->
	<!-- This plugin initialize Tiles definition factory. This later can takes 
		some parameters explained here after. The plugin first read parameters from 
		web.xml, thenoverload them with parameters defined here. All parameters are 
		optional. The plugin should be declared in each struts-config file. - definitions-config: 
		(optional) Specify configuration file names. There can be several comma separated 
		file names (default: ?? ) - moduleAware: (optional - struts1.1) Specify if 
		the Tiles definition factory is module aware. If true (default), there will 
		be one factory for each Struts module. If false, there will be one common 
		factory for all module. In this later case, it is still needed to declare 
		one plugin per module. The factory will be initialized with parameters found 
		in the first initialized plugin (generally the one associated with the default 
		module). true : One factory per module. (default) false : one single shared 
		factory for all modules - definitions-parser-validate: (optional) Specify 
		if xml parser should validate the Tiles configuration file. true : validate. 
		DTD should be specified in file header (default) false : no validation Paths 
		found in Tiles definitions are relative to the main context. -->
	<plug-in className="org.apache.struts.tiles.TilesPlugin">
		<!-- Path to XML definition file -->
		<set-property property="definitions-config" value="/WEB-INF/tiles-defs.xml" />

		<!-- Set Module-awareness to true -->
		<set-property property="moduleAware" value="true" />
	</plug-in>

	<!-- ==== Validator plugin ==== -->

	<plug-in className="org.apache.struts.validator.ValidatorPlugIn">
		<set-property property="pathnames"
			value="/WEB-INF/validator-rules.xml,/WEB-INF/validation.xml" />
	</plug-in>
</struts-config>

